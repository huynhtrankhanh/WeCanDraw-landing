<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
    <link rel="stylesheet" type="text/css" href="/style.css">
    <meta name="viewport" content="width=device-width, initial-scale=1" />
</head>
<body>
    <div class="container">
        <h2>Login</h2>
        or <a href="/signup">Sign up</a>
        <form id="loginForm">
            <input type="text" name="username" placeholder="Username" required><br>
            <input type="password" name="password" placeholder="Password" required><br>
            <button type="submit">Login</button>
        </form>
        <div id="error"></div>
    </div>
    <script>
        async function hashPassword(username, password) {
            const encoder = new TextEncoder();
            const data = encoder.encode("MEETING MEETING 747589285774729292[" + username + "]");
            const key = await window.crypto.subtle.importKey(
                "raw", data, "PBKDF2", false, ["deriveBits", "deriveKey"]);
            const hash = await window.crypto.subtle.deriveBits(
                {name: "PBKDF2", hash: "SHA-256", iterations: 1000, salt: data},
                key, 256);
            return btoa(String.fromCharCode(...new Uint8Array(hash)));
        }

        document.getElementById("loginForm").addEventListener("submit", async function(e) {
            e.preventDefault();
            const formData = new FormData(this);
            const username = formData.get("username");
            const password = await hashPassword(username, formData.get("password"));
            fetch('/login', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ username, password })
            }).then(response => response.json()).then(data => {
                if (data.success) {
                    window.location.href = '/meetings';
                } else {
                    document.getElementById("error").innerText = data.message;
                }
            });
        });
    </script>
</body>
</html>
