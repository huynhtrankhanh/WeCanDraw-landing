<!DOCTYPE html>
<html>

<head>
    <title>Sign Up</title>
    <link rel="stylesheet" type="text/css" href="/public/style.css">
    <link href='https://cdn.jsdelivr.net/npm/boxicons@2.0.5/css/boxicons.min.css' rel='stylesheet'>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
</head>

<body>
    <div class="l-form">
        <div class="shape1"></div>
        <div class="shape2"></div>
        <div class="form">
            <form id="signupForm" class="form__content">
                <h2 class="form__title">Sign Up</h2>

                <div class="form__div form__div-one">
                    <div class="form__icon">
                        <i class='bx bx-user-circle'></i>
                    </div>

                    <div class="form__div-input">
                        <label for="" class="form__label">Username</label>
                        <input type="text" class="form__input" required><br>
                    </div>
                </div>

                <div class="form__div">
                    <div class="form__icon">
                        <i class='bx bx-lock'></i>
                    </div>

                    <div class="form__div-input">
                        <label for="" class="form__label">Password</label>
                        <input type="password" class="form__input" required><br>
                    </div>
                </div>

                <input type="submit" class="form__button" value="Create account">

                <div class="form__action">
                    <span class="form__action-text">Already have an account?</span>
                    <a href="/login" class="form__action-link">Log in</a>
                </div>
            </form>
            <div id="error"></div>
        </div>
    </div>
    <script src="/public/main.js"></script>
    <script>
        async function hashPassword(username, password) {
            const encoder = new TextEncoder();
            const data = encoder.encode("MEETING MEETING 747589285774729292[" + username + "]");
            const key = await window.crypto.subtle.importKey(
                "raw", data, "PBKDF2", false, ["deriveBits", "deriveKey"]);
            const hash = await window.crypto.subtle.deriveBits(
                { name: "PBKDF2", hash: "SHA-256", iterations: 1000, salt: data },
                key, 256);
            return btoa(String.fromCharCode(...new Uint8Array(hash)));
        }

        document.getElementById("signupForm").addEventListener("submit", async function (e) {
            e.preventDefault();
            const formData = new FormData(this);
            const username = formData.get("username");
            const password = await hashPassword(username, formData.get("password"));
            fetch('/signup', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ username, password })
            }).then(response => response.json()).then(data => {
                if (data.success) {
                    window.location.href = '/login';
                } else {
                    document.getElementById("error").innerText = data.message;
                }
            });
        });
    </script>
</body>

</html>